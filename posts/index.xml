<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Leopord</title>
    <link>https://leopord.github.io/posts/</link>
    <description>Recent content in Posts on Leopord</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Feb 2020 17:23:03 +0800</lastBuildDate>
    
	<atom:link href="https://leopord.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vim操作命令</title>
      <link>https://leopord.github.io/posts/vim/</link>
      <pubDate>Fri, 07 Feb 2020 17:23:03 +0800</pubDate>
      
      <guid>https://leopord.github.io/posts/vim/</guid>
      <description>1 关于Vim Vim是我最喜欢的编辑器，也是Linux下第二强大的编辑器。 虽然emacs是公认的世界第一，我认为使用emacs并没有使用vi进行编辑来得高效。 如果是初学vi，运行一下vimtutor是个聪明的决定。
如果你的系统环境不是中文，而你想使用中文的vimtutor，就运行vimtutor zh）
1.1 Vim的几种模式  正常模式：可以使用快捷键命令，或按:输入命令行。 插入模式：可以输入文本，在正常模式下，按i、I、a、A、o、O等都可以进入插入模式。 可视模式：  按v可以进入可视模式， 在可视模式下，移动光标可以选择文本。 按V进入可视行模式， 总是整行整行的选中。 ctrl+v进入可视块模式。   替换模式：正常模式下，按R进入。  2 启动Vim  vim -c cmd file: 在打开文件前，先执行指定的命令； vim -r file: 恢复上次异常退出的文件； vim -R file: 以只读的方式打开文件，但可以强制保存； vim -M file: 以只读的方式打开文件，不可以强制保存； vim -y num file: 将编辑窗口的大小设为num行； vim + file: 从文件的末尾开始； vim +num file: 从第num行开始； vim +/string file: 打开file，并将光标停留在第一个找到的string上。 vim –remote file: 用已有的vim进程打开指定的文件。 如果你不想启用多个vim会话，这个很有用。但要注意， 如果你用vim，会寻找名叫VIM的服务器；如果你已经有一个gvim在运行了， 你可以用gvim –remote file在已有的gvim中打开文件。  3 文档操作  :e file – 关闭当前编辑的文件，并开启新的文件。 如果对当前文件的修改未保存，vi会警告。 :e!</description>
    </item>
    
    <item>
      <title>Markdown基本语法</title>
      <link>https://leopord.github.io/posts/markdown/</link>
      <pubDate>Thu, 06 Feb 2020 16:11:32 +0800</pubDate>
      
      <guid>https://leopord.github.io/posts/markdown/</guid>
      <description>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。
相比WYSIWYG编辑器
优点：
 因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。 操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可  缺点：
 需要记一些语法（当然，是很简单。五分钟学会）。 有些平台不支持Markdown编辑模式。  还好，简书是支持Markdown编辑模式的。开启方式：设置-&amp;gt;默认编辑器-&amp;gt;Markdown编辑器
一、标题 在想要设置为标题的文字前面加#来表示 一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。
注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。
示例：
# 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题 效果如下：
这是一级标题 这是二级标题 这是三级标题 这是四级标题 这是五级标题 这是六级标题 二、字体 1.加粗 要加粗的文字左右分别用两个*号包起来
2.斜体 要倾斜的文字左右分别用一个*号包起来
3.斜体加粗 要倾斜和加粗的文字左右分别用三个*号包起来
4.删除线 要加删除线的文字左右分别用两个~~号包起来
示例：
**这是加粗的文字** *这是倾斜的文字*` ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ 效果如下：
这是加粗的文字
这是倾斜的文字`
这是斜体加粗的文字
这是加删除线的文字
三、引用 在引用的文字前加&amp;gt;即可。引用也可以嵌套，如加两个&amp;gt;、三个&amp;gt;
n个&amp;hellip;
貌似可以一直加下去，但没神马卵用
示例：
&amp;gt;这是引用的内容 &amp;gt;&amp;gt;这是引用的内容 &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;这是引用的内容 效果如下：
 这是引用的内容
 这是引用的内容
   这是引用的内容</description>
    </item>
    
  </channel>
</rss>